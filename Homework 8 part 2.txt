import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r132/build/three.module.js';

import { OrbitControls } from 'https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js';

var renderer = new THREE.WebGLRenderer();
renderer.setClearColor(new THREE.Color(0x000000));
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 1000 );

var scene = new THREE.Scene();



const vert =[
    -1,-1, 1,    
    1,-1, 1,
    -1, 1, 1,
    1, 1, 1,
    
    -1,-1,-1,
    1,-1,-1, 
    -1, 1,-1,
    1, 1,-1,


];

const edges=[
0,1,2,
1,3,2,

1,5,3,
5,7,3,

5,4,7,
4,6,7,

4,0,6,
0,2,6,

2,3,6,
3,7,6,

0,4,1,
1,4,5,

]

const geometry = new THREE.PolyhedronGeometry( vert, edges, 1, 0 );

geometry.computeVertexNormals ();

const material = new THREE.MeshNormalMaterial();
const mesh = new THREE.Mesh( geometry, material );
mesh.position.set(1,0,0); 
scene.add( mesh );

const wireframe = new THREE.WireframeGeometry( geometry );
const lines = new THREE.LineSegments( wireframe );
lines.material.depthTest = false;
lines.material.opacity = 0.25;
lines.material.transparent = true;
lines.position.set(-1,0,0); 
scene.add( lines );

camera.position.set(0, 0, 10); 

var controls = new OrbitControls (camera, renderer.domElement);

var color = 0xFFFFFF;
var intensity = 10;
var light = new THREE.AmbientLight(color, intensity);
scene.add(light);

const color2 = 0xFFFFFF;
const intensity2 = 1;
const light2 = new THREE.DirectionalLight(color2, intensity2);
light2.position.set(0, 0, 100);
light2.target.position.set(-5, 0, 0);
scene.add(light2);
scene.add(light2.target);

var animate = function(){
	requestAnimationFrame(animate);
	renderer.render( scene, camera );
  controls.update();
}

animate();


